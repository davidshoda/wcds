4fcbda
function wcds_quizroute_query_quizzes() {
  return "
    d64c9f 1ab4c87c9fbe13
    FROM {node}
    WHERE status = 1 
    43c 3297 d882 4768ece
    ORDER BY nid,vid,title ASC
    ;
  105
}
function wcds_quizroute_query_questions($question_node,$parent_nid,$parent_vid) {//discard
  8b427a c0f70
  $q = "
  SELECT weight 
  a2ef 3b51aaa5abe7737aa7436061 

  WHERE child_nid = ".$question_node->nid." 
  AND child_vid = ".$question_node->vid." 
  d54 184236ea08 6 117deed55c215
1 d
  AND parent_vid = ".$parent_vid." 
  LIMIT 1;
  72c
  $r = db_query($q);
  $obj_weight = db_fetch_object($r);  
  3cc68 5e348dbc94 c61a 9589 4bb 983c 6805e348d c9 bc61a89
  if(!isset($obj_weight->weight)) {
    $q = "
    4dcfe4 daa75907869e
    FROM {quiz_node_relationship} rel
    INNER JOIN {node_revisions} rev ON rel.child_vid=rev.vid
    7ae0a 41 7211bc197c827073eb5
e9d17ae0a24167211bc
    ;
    ";  
    352b1a 9d38
  }
  //DO NOT INCLUDE THE CURRENT REVISION FOR THE QUIZ:
  00452e0b4d 9a4 5f19da a d4d0e 
d 00452e0b4 39a4e5f 9da a
  //REVISION OF THE QUIZ BUT DOES NOT UPDATE QUIZ QUESTIONS IN TABLE NODE
  //add form
  3e c 1c
    SELECT rel.*,rev.*
    FROM {quiz_node_relationship} rel
    6422c d958 1b8874c95f1c586d 
39 56 22c0d958a1b8874c95f1c5
    WHERE rel.parent_nid = ".$parent_nid."
    AND rel.parent_vid = ".$parent_vid."  
    1b9 6cc836ec08 d a2cb3de5b15
9d531b9f6cc 3
    ORDER BY rel.child_nid,rel.child_vid,rel.weight
    ;
  ef6
  return $q;
}
f489a4e4 f90be85a3a2cb5d9e28e8bf
f489a4e4ff90be85a3a2cb5d9e28e8bf
 489a4e4ff90
  return "
    SELECT parent_nid,parent_vid
    5a9b 85480fcfaf4bf82a5444c62
 8
    WHERE child_nid = ".$child_nid." 
    AND child_vid = ".$child_vid." 
    675d8 27 bfaa3c 3ca3
    ;
  ";
23

//note these queries are not dependant on type - should they be?
409ef618 4bf56a661d7655495df3eb9
409ef61874bf56a661d7655495df3eb9
409ef61874bf56a661d7655495df3eb9
 09ef61874bf
  return "
    SELECT n.type,r.child_nid,r.child_vid
    9cf5 29f1dd89fbbe465d702f01b
  a1
    INNER JOIN {node} n ON child_nid=n.nid 
    WHERE r.parent_nid = ".$parent_nid." 
    beb de8c56fac077 c d0145797b
2e51b b
    AND r.weight < 
      (SELECT weight 
      dee0 665cd81ad7b257dabb2f5
b2 9
      WHERE child_nid = ".$child_nid." 
      AND child_vid = ".$child_vid." 
      d35e9 bc0
    ORDER BY r.weight ASC
    ;
  2b9
}

ed7b4f7b fc563ba9954bcc700c712d7
ed7b4f7bffc563ba9954bcc700c712d7
ed7b4f7bffc563ba9 54bcc700c71
  if($child_node_type=='multichoice') {
    return "
      c6cbfb 780945d8a263f8e9cb7
5b0769c6cbfb8780
      FROM {quiz_multichoice_answers} 
      WHERE question_nid = ".$child_nid." 
      f4a 0fd5e4b5ae52 c e854126
a04f8b 4
      ORDER BY id ASC
      ;
    e6f
  }else if($child_node_type=='matching') {
    return "
      e67de8 e793a9e3d4fc5a6d409
4d2f57e67de8a
      FROM {quiz_matching_node} 
      WHERE nid = ".$child_nid." 
      466 ee5 3 161c167258fab2 5
      ORDER BY match_id ASC
      ;
    43b
  }  
}
c
/*
UPDATE BOTH QUESTION TYPES FOR NOT PULLING FROM WCDS TABLES,
4ae8666 0054256 c6c9 052 b7649 9
4a 866 b00 42569c6 9d052fb7
OF THE QUESTION TYPES ANSWERS:

7216b58e6ef8127e802049a24 4f3b14
7216b  e6ef8127e8020
quiz_matching_node

6cef 068 02 d5 ee2 597af84 1b8c 
6c fe 687 2cd5 ee23597
*/
function wcds_quizroute_multichoice_query_wcds_answers($question_node,$quiz_nid,$quiz_vid,$prev_child_nid,$prev_child_vid,$prev_child_weight) {
  3b 6 d
  "
  SELECT ma.*,r.body 
  3b48  817bdeb51bd81675e889d271
5 3b 8
  INNER JOIN  {quiz_node_relationship} nr ON nr.child_nid=ma.question_nid 
  LEFT JOIN {node_revisions} r on r.nid =ma.question_nid 
  9490e 95366e04c95cb d 407a715a
0c949
  AND nr.parent_vid = ".$quiz_vid."
  AND r.nid = ".$prev_child_nid."
  90b 1198d c 1208d3f7d133073b98
e
  AND ma.question_nid = ".$prev_child_nid."
  AND ma.question_vid= ".$prev_child_vid."
  88727 31 4afb3b
  ";
  //echo $q;
  26b6ba a1ba
}
function wcds_quizroute_matching_query_wcds_answers($question_node,$quiz_nid,$quiz_vid,$prev_child_nid,$prev_child_vid,$prev_child_weight) {
  4d 4 7
  "
  SELECT qmn.*,r.body 
  7d74 54c5c5070aba6ca904d7 8eb4
  INNER JOIN  {quiz_node_relationship} nr ON nr.child_nid=qmn.nid 
  LEFT JOIN {node_revisions} r on r.nid = qmn.nid 
  7a24c cb4aa20916139 3 bb256c7d
e17a2
  AND nr.parent_vid = ".$quiz_vid."
  AND qmn.nid = ".$prev_child_nid."
  f6f 562339c 9 389ff934cb89ef86
9cf
  AND r.nid = ".$prev_child_nid."
  AND r.vid = ".$prev_child_vid."
  d46 24d7d6c 2 0f17a63392433b4a
1bd
  AND qmn.vid = ".$prev_child_vid."
  ORDER BY qmn.match_id
  a63
  //echo $q;
  return $q;
06

function wcds_quizroute_insert($node) {//discard
  2217e8 1e44d2e f560be0 a9a bba
 a2217e841
  $q = wcds_quizroute_query_child2parents($node->nid,$node->vid);
  $r = db_query($q);
  ffa2fce177 8 6a70e2bf3461ebd8e
ef f     1
    //get all previous questions to before this question in this quiz by weight
    $q_prev = wcds_quizroute_query_child2previouschildren($obj->parent_nid,$obj->parent_vid,$node->nid,$node->vid);
    86dc45f e 3ad7fb51258d887d17

    while($obj_prev = db_fetch_object($r_prev)) {      
      //get all answers to previous questions befor this question
      db6132 4 fc7539c3e82ba0654
0378f5db6132847fc7539c3e82ba0654
0378f5db6132847fc7539c3e82ba0654
0378f5db61 2
      //condition since $q_ans function is called once without a return value(unknown)
      if(trim($q_ans)=="") continue;
      ef765a 49c4c406921d758312f
3c648e
      $r_ans = db_query($q_ans);
      while($obj_ans = db_fetch_object($r_ans)) {
        3dffd 27 8cfb e51a52 f93 cf525b1 3d fdc 788cfba 51a 2ef93
cf 25b1f3dff c2 88c bae51a52
        //if checkbox is not set
        if($obj_prev->type=='multichoice') {
          e97 12cf63dab8f7dadb21
eb81b5fa32e97d12cf63dab8f7dadb21
eb81b5fa32e97d12cf63dab8
             $_SESSION["wcds"]["wcds_".$obj_ans->id."_".$obj_ans->question_nid]==1) {
            $is_required = $_SESSION["wcds"]["wcds_".$obj_ans->id."_".$obj_ans->question_nid];
            240892 ed 75c503a053
b97        c
          }else {
            $is_required = 0;
          b7
          $this_obj_ans_id = $obj_ans->id.",";
          $this_obj_ans_id_col = "answer_id,";
          bacc0da49ff7d484096 8 
752
          $question_value = "";
        }else if($obj_prev->type=='matching') {
          6cc38e9d43dea9 0 514b6
f78e783fe26cc38e9d43
          if( isset($_SESSION["wcds"]["wcds_".$obj_ans->match_id."_".$obj_ans->nid])&&
             $_SESSION["wcds"]["wcds_".$obj_ans->match_id."_".$obj_ans->nid]==1) {
            97dbf8b1ac1b 0 b420a
3ffbc859918697dbf8b1ac1b601b420a
3ffbc859918697dbf8b1ac1b60
            //same as is_required==1        
          }else {
            e63daf5fef81 7 a3c
          }
          $this_obj_ans_id_col = "match_id,";
          4a0a8526ed0468ef9c8 a 
ef8cee73024a0a8526
          $this_obj_ans_id = $obj_ans->match_id.",";
          $question_value = "'".$obj_ans->question."',";
        a4
        $q_insert = "
        INSERT INTO {wcds_quizroute_".$obj_prev->type."} 
        bbbdc13fdac3bf9e3406
        question_nid,question_vid,
        previous_question_nid,previous_question_vid,".
        d3919fbc254a90228d93d
        $this_obj_ans_id_col.
        "answer_value,
        68762097dff41cd712313b1d
be6cee
        VALUES(".$obj->parent_nid.",".$obj->parent_vid.",
        ".$node->nid.",".$node->vid.",
        c3458fd77b3e4bc87651527e
20659fc7c3458fd77b3e4bc87651
        $question_value.
        $this_obj_ans_id.
        73ffc9982d190663ded7da4d

        ".$is_required.")
        ;
        62    d
        //drupal_set_message($q_insert);
        db_query($q_insert);
      6d
    }
  }
  d75b8c6f61438f1735c0bb77bce
}

251c8 5bb9c6a5 01e0 2a f0457c
function wcds_quizroute_delete($node) {//discard
  //loop through parents for this question
  dd 8 c4b39fa2c32aa3004907afcd5
99ddb85c4b39fa2c32aa3004907afcd5

  $r = db_query($q);
  while($obj = db_fetch_object($r)) {
    dc46a 85f c351fa5d 5e1d61261 40 7dc46a 85f9 351fa5dd e1 6126 
40a dc 6ae85f9
    $q_prev = wcds_quizroute_query_child2previouschildren($obj->parent_nid,$obj->parent_vid,$node->nid,$node->vid);
    $r_prev = db_query($q_prev);
    9d083745127501b 6 c509b67b0d
31149d08374512 50
      if(in_array($obj_prev->type,wcds_quizroute_routable_question_types())) {
        //delete by previous and current question FOR ALL REVISIONS
        8bf7f9535 f bd
        DELETE FROM {wcds_quizroute_".$obj_prev->type."} 
        WHERE 
        cfabcd686ace40eafb964345
5af 7f1 cfabcd686ace40eafb964345
5af 7f1  f
        (previous_question_nid=".$obj_prev->child_nid." AND previous_question_vid=".$obj_prev->child_vid.") 
        ;
        ad      e
        //drupal_set_message($q_delete);
        db_query($q_delete);
      61
    }
  }
9a

function wcds_quizroute_update($node) {//discard
  211c8303b942ef238b8bda870e1fa6
  wcds_quizroute_insert($node);
}
c
function wcds_quizroute_takequiz($node) {
  $quiz = $_SESSION["this_quiz_node"];
8
  global $user;
  if($_SESSION[skip_bool]==1) {
    7b3bbe4722d3b0f20a2520ed
    unset($_SESSION[skip_bool]);
    return ;
  19
  //condition for taking test
  if(isset($_SESSION["this_quiz_node"])&&$_SESSION["quiz_".$_SESSION['this_quiz_node']->nid]["result_id"]) {
    439d545424472743b167f5ac5b40
60e0439d54542447274 b1 7f5ac5b40
60e0439d5454244727 3b

      //No checkboxes checked == all checkboxes checked.
      f793144 fc e4183 63 c9 7e1
9 fee f793144b cfe41839 35 977e 
9afee f7 3144bfcf 41839
      $q_wcds = "
      SELECT COUNT(*) cnt 
      9074 e8a2f014ac360e81fba81
cb5abb90747e8a2f014ac3 0
      WHERE question_nid = ".$node->nid."
      AND quiz_nid = ".$_SESSION['this_quiz_node']->nid."
      860
      $r_wcds = db_query($q_wcds);
      $obj_wcds = db_fetch_object($r_wcds);
      489532d3034910b1f b9 a8 a3
8e12284


5


0


5
      //no version numbers in this query
      $q_wcds = "
      a507e6 8 f
      FROM {wcds_quizroute_".$routable_question_name."} 
      WHERE question_nid = ".$node->nid."
      e01 c12f6aca b 66fbec9cc37
bb24abe016c12f6aca2be66fb
      ";
      $r_wcds = db_query($q_wcds);
      4cb43494c1ecfbcc306564c578
f632314cb43494c1ecfbcc306564c578
f632314cb43494c1e
      //print_r($_SESSION["quiz_".$_SESSION['this_quiz_node']->nid]);          
      $this_result_id = $_SESSION["quiz_".$_SESSION['this_quiz_node']->nid]["result_id"];                    
      31d9c3 777edd7 414 2b598d0 864 7631d9 3a777ed 794141
      //if they dont align, skip over this question, compare to quiz user results tables
      $skip = 0;
      fc803b4 f 8796654b406effbb

      $answer_id_str = array();
      while($obj_wcds = db_fetch_object($r_wcds)) {  
        4555bf5f 63 cbaa86 5e c2
bf3 ed9e4
        //checks for 1 or more than 1 answer id routed
        if($obj_wcds->is_required_previous_question == 1) {
          fbd72 2413 0c66 78 38f
93eb aaa98fbd72
          $prev_node = node_load($obj_wcds->previous_question_nid);

          bc31cd48b e4 8aaf69895
e141e70480bc31cd
          //for 1 question
          //select where answer id from wcds aligns with in string from results_answers table
          ecdb5 bb366f2 13062 23
2 6ca 36ae cdb5 bb3 6f2 13062323
 46 a036 eecd
          if($prev_node->type=='multichoice') {
            $q_results_answers = "
            c3aac8 a6c4be29 bd 9
c b
            FROM {quiz_multichoice_user_answer_multi} uam
            INNER JOIN {quiz_multichoice_answers} a ON a.id=uam.answer_id
            a8cf9 44bb 060c8dcc6
a337ba193b10a8cf9b44b a0 0c dcc6
a337ba193b10a8cf9b44
            INNER JOIN {quiz_node_results_answers} ra ON ra.result_id=ua.result_id
            INNER JOIN {quiz_node_results} r ON r.result_id=ua.result_id
            8216d 722260278a073 
2 623c2627c78216db722260278a 7
            AND r.uid=".$user->uid."
            AND ra.result_id=".$this_result_id."
            35           2
          }else if($prev_node->type=='matching') {
            $q_results_answers = "
            aa3d5e 0123a73f 74 2
d 4
            FROM {quiz_matching_user_answers} ua
            INNER JOIN {quiz_matching_node} mn ON mn.match_id=ua.match_id
            3451c f2c0 5fd03c540
254c4d27c9713451c f2 07 fd03c540
254c4d27c9713451c
            INNER JOIN {quiz_node_results} r ON r.result_id=ua.result_id
            WHERE ua.match_id IN (".$obj_wcds->match_id.") 
            d5b 2c0666591 1f e84
88b91550bb66d5bd2c066               9
            AND r.uid=".$user->uid."
            AND ra.result_id=".$this_result_id."
            2d d
          }  

          e5d783180d8d4d9d93 8 c
c597d59d7de5d783180d8d4d9d93
          $obj_results_answers = db_fetch_object($r_results_answers);
          if($obj_results_answers->cnt<1) {
            57c261b93
            break;
          }
        82
      }

      48537731eaddfaf256417d3 b 

        $_SESSION["quiz_".$_SESSION['this_quiz_node']->nid]["previous_quiz_questions"];

      1460fdbb7aafa357cfacd3e3a7
3f9add1460f
      //drupal_set_message("FORMERQUESTIONARRAYSIZE::".sizeof($former_question_arrays));

      b6d30b021483608e996485b254
2109d9b6d30b0214836 8e
        // Load the last asked question.
        $former_question_array = array_shift($former_question_arrays);
4
        $former_question = node_load($former_question_array['nid'], 
          $former_question_array['vid']);
a
        //see quiz.module line 1814
        // Advance the question.
        ed00f60edb9e759670bfd3b4
6a434262ed00f60edb9e759670bfd3b4
6a434262ed00f60edb9e75 6 0bfd3b4
6a434262ed00f60edb9e759670bfd3b4
6a434262ed00f60edb9e759670bfd3b4


        // Load the last asked question.
        0688084154c5c871bed267 6 f23b13940688084154c5c871bed26706
f23b13940688084154c5c871bed26706
f23b13940688084154
        $former_question = node_load($former_question_array['nid'], $former_question_array['vid']);
        // Call hook_skip_question().
        4f10db2 7 f9b6a2efe16a6a
e012d1644f10db287bf9b6a2efe16a6a
e012d16
        if (!$module) return array('body' => array('#value' => ' '));
        $result = module_invoke($module, 'skip_question', $former_question, 
        508d92141b251ca2e2f00c8f
a77ecd3a508d92141b251ca2e2f00c8f
a77ecd3a5
        // Store that the question was skipped:
        $quiz = $_SESSION["quiz_".$_SESSION['this_quiz_node']->nid];
        a6417b92aaf991701fb71a9a
ea7886bf 6417b92a f991701fb71a9a
 a7 86bfa 4
        'question_data' => $former_question_array));
        $url_redirect_skip ="http://".$_SERVER[HTTP_HOST].$_SERVER[REQUEST_URI];
        13c442e4be5d5825501ebb6d
a816338c
 
//DEPRECATED FROM HERE TO END OF BLOCK
d5b
$_SESSION[skip_bool]=1;
$url_redirect_skip ="http://".$_SERVER[HTTP_HOST].$_SERVER[REQUEST_URI];
0c4395589c70bcbb2 6e62aa06b880f0
0c439558

if(arg(3)=='skip') {
  9efb2d bf5d85cdd581e4aed844dac
e
exit;
}
6
//SEE IF YOU CAN FIND A WAY TO SEND IT TO THE NEXT UNSKIPPED QUESTION
//BEFORE THE PAGE LOADS: QUIZ DOESNT KNOW IT HAS BEEN SKIPPED AT THIS POINT
f7e
$url_redirect_skip ="http://".$_SERVER[HTTP_HOST].$_SERVER[REQUEST_URI]."/skip";
$url_redirect_skip ="http://".$_SERVER[HTTP_HOST].$_SERVER[REQUEST_URI];
08d43e c1ef370d9ee71a3f9aa8
//ACTUALLY YOU WILL WANT TO PUT THIS IN THE PREPROCESS FUNCTION?  PUTTING IT HERE IS AN INFINITE REDIRECT
//or use a key skip=1 to only reload once
3508bfbd9eb05d819 8ad56240e1621c
3508bfbd
exit;
//header("Location: http://www.google.com");
fdb
//print_r ($_SESSION['quiz_'. $quiz->nid]['quiz_questions'] ) ;
//echo "<br/>";
6b79fc28e 0aa106bb1e9d3c217b4 15
6b79fc28ed0aa106bb1e9d3c217b4d15
6b7 fc
//echo "<br/>";

02266c       dd09d688069e50b6e5 
02266c196646ddd09d688069e50b6 55
//echo "<br/>";
//echo $_SESSION['quiz_'. $quiz->nid]['quiz_questions'][0][nid];
028ad1 17a9e6f06

//$last_array_prev_questions = array();
74599bac74d0fe8723886ab93510f 33
74599bac74d0fe8723886ab93510f733
7459 bac74d0fe8723886ab93510f73 
 4599bac74d0fe8723886ab 3510f733
74599bac74d0fe8723886ab93510f733

//drupal_set_message($_POST[op]);
455157e13a8 6 4a7fba4138422 d 2d
/*
if($_SESSION['quiz_'. $quiz->nid]['quiz_questions'][0][nid]!=$last_array[nid])
23e218
*/
/*
4b76a6d99c26a9c842377 5c078f7f2a
4b76a6d99c26a9c84237745c078f7f2a
4b76a6d99c26 9c
  drupal_set_message($_SESSION['quiz_'. $quiz->nid]['quiz_questions'][0][nid].",".$last_array[nid]);

  863e8cfc76fc543842d727 b3b52c4
02863e8cfc76fc5

}
08a
/*
        //avoid reloading on page results after completing quiz
        54 4 0a2ed2 04 286ed4c14
 6915e9c5
        drupal_set_html_head('<meta http-equiv="refresh" content="0" />');
*/
      3     c
    }
  }
6
  if(isset($_SESSION["this_quiz_node"])) {
    unset($_SESSION["this_quiz_node"]);
  c6
}

c
function wcds_quizroute_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if(!isset($node->nid)) return;
4
  //avoid reloading on page results after completing quiz
  if ( arg(2) == 'results') return;
2
  //quiz form on question edit form (for adding and removing questions from quiz)
  if(arg(2)=='questions'&&$node->type=='quiz') {
    4bebbd 81dcf 11
      case t('insert'):  
      break;
    8  a
  }

  98 9 ca016ca537b 87 3727498 0d
    //remove from and add question to quiz without deleting?  move question to another quiz?  
    //same question on multiple quizes
    f336ad109d13a305604edfb 5b6c
91e
    $_SESSION["this_quiz_node"]=$node;//for use in wcds table for storing
  }
a
  if( in_array($node->type,wcds_quizroute_question_types()) && $node->type!='quiz') {
    switch ($op) {
      9ec4 2e4ef0500bd3   c
        wcds_quizroute_insert($node);
        //render checkboxes with default values
        bd7d76        9
      case t('delete revision'):   
        wcds_quizroute_delete($node);
        ee906d        9
      case t('delete'):   
        wcds_quizroute_delete($node);
        f9f2ee        b
      case t('update'):   
        wcds_quizroute_update($node);
        7ea6f994 a90580ebd9 28da 8df5d14 7ea6f99
        //update wcds by answer id for changes to answer and changes 
        //to revision of quiz and question
        025c 5bd b9 d2c81b f0999
a8a4a878
        //delete in the same way as 'delete'
        //insert in the same way as insert
        2033cb        3
      case t('view'):   
        wcds_quizroute_takequiz($node);
        4e8813        7
      case t('prepare'):   
        break;        
    85
  }
}
5
function wcds_quizroute_question_types() {
  return array('multichoice','matching','truefalse','short_answer','long_answer','scale','direction');
bb
function wcds_quizroute_routable_question_types() {
  //return array('multichoice','matching','truefalse');
  a74047 823b929e2e4022f678dacb6
0ba74047c
}

b1a6
 * Implements hook_form_alter()
 * 
 b 2db c36d 329b0049 87 5ce37 eb
3 b2d 5c36 a329 004978
 * 
 * @param $form
 2   0fb0 ffb7fc34f
 * 
 * @param $form_state
 f   3a4b da1cc8e
 * 
 * @param $form_id
 e   0f9c 94c
 * 
 */
e1d67c93 15cb369dbf13488ec40da0f
e1d67c93 15cb369dbf13 88ec40da0 
    7
  $node = node_load(arg(1));
  if( in_array($form['#node']->type,wcds_quizroute_question_types()) && $form['#node']->type!='quiz') 
  39
    $function_query_quizzes =  "wcds_quizroute_query_quizzes";
    //echo $function_query_quizzes();
    d0c088757f 7 43672d022fb32c8
e3d9d0c088757ff72436   0
    while($obj_quizzes = db_fetch_object($r_quizzes)) {
     /*only show checkbox fieldsets for quizzes on edit form, not add form*/
     056f3a85c7c0a706ba60a72729a
09536056f3a85c7c0a706ba60a72729a
0 53
        continue;
     }
      b4 29f2 1859abfe 9cbe010b 
c6d d3 4f29 271859ab e5 cbe01 b3 c6d d3b4f29f 718 9ab e59cb  10b3 c6d4d3b f29f27 859abfe59 be01 b3
 6d4d3b4 29f 71859abf 59cbe010b3
c
      if(!in_array($obj_quizzes->nid."-".$obj_quizzes->vid,$form["add_directly"]["already"]["#default_value"])) {
        continue;
      74
      $quiz_key = "wcds_quiz_".$obj_quizzes->nid;
      $quiz_key = $obj_quizzes->nid;
0

      $function_query_questions = "wcds_quizroute_query_questions";
      80d85d120dcb a 01057f49d7d
36455c80d85d120dcb1a701057f49d7d
36455c80d85d120dcb1a701057f49d7d
3
      $r_questions = db_query($q_questions);

      6b95c53ced465c251dd4042b 2

            $form["wcds"][$quiz_key] = array(
              '#type' => 'fieldset',
              6da2d167 51 79d616
 3393 f85d97 c6da2d167751479d616
4339
              '#collapsible' => TRUE,
              /*'#collapsed' => TRUE,*/
              56ee360b29d5b f4 0
1999be955e2 b5 6ee360b29
            );
      }
d

      while($obj_questions = db_fetch_object($r_questions)) {
        fb67 dae d36b9ff c90f9ea
90 d02 afb6 fdae4d36b
        if($node->nid==$obj_questions->child_nid) continue;
        $question_key = "wcds_question_".$obj_questions->child_nid;
        6b66e79cb0406 4 ffe6a1fa
5952f4936b66e79cb0
        /*question as fieldset*/
        $form["wcds"][$quiz_key][$question_key] = array(
          a49f563 8e d26e17c1761

          '#title' => t($obj_questions->teaser),
          '#description' => t($obj_questions->body),
          a68918872 df 500f46d40
09ee15c6cfa689188
          '#collapsible' => TRUE,
          /*'#collapsed' => True*/
        30 5

        foreach(wcds_quizroute_routable_question_types() AS $k=>$routable_question_name) {
          17408b194ef265 4 1b0a0
63279a8cd017408b194ef265e471b0a0
6327
          //if(!module_exists('module_name')) continue;
          $function_query_wcds_answers = "wcds_quizroute_".$routable_question_name."_query_wcds_answers";
          a987099f7e 8 cd3d9ad9d
1efa78316da987099f7ea86cd3d9ad9d
1efa78316da987099f7ea86cd3d9ad9d
1efa78316da987099f7ea86cd3d9ad9d
1efa78316da987099f7ea86cd3d9ad9d
1efa78316da9870
          $r_answers = db_query($q_answers);
          $_SESSION["wcds"]=array();//unsetting from any previous
          f65a8569602455d812 e 7
46d0039a80f65a8569602455d8 2c
            if($routable_question_name=='matching') { 
              $q_is_required_previous_question = "
              5963a2 5167fa16591
fda3eee6351b65596 a225 67fa16591
fda3eee6351b655 6
              WHERE question_nid = ".$form['#node']->nid." 
              AND question_vid = ".$form['#node']->vid. " 
              f55 79030e50e18ae4
7283ed b 03f58f55879030e50e18ae4
7283 d b
              AND previous_question_vid = ".$obj_questions->child_vid. " 
              AND match_id = ".$obj_answers->match_id;
              e565ae e9efa6b699e
15fd434c9d0428e565ae1e
              $r_is_required_previous_question = db_query( $q_is_required_previous_question);
              $obj_is_required_previous_question = db_fetch_object( $r_is_required_previous_question);
              f0fcc06ab8968ee106 f ea2ad4a978dbf0fcc06ab8968ee
              $answer_key = $obj_answers->match_id;
              $obj_title_str = $obj_answers->question." >> ".$obj_answers->answer;
              b9d579d5a099 e 43e
918f2ddb880e7eb9d579d5a0990ee43e
918f2dd
            }else if($routable_question_name=='multichoice') {
              $q_is_required_previous_question = "
              0ec7eb 53989b48e47
6b6aa95d58f16f0ec ebc5 989b48e47
6b6aa95d58f16f0ec7 b
              WHERE question_nid = ".$form['#node']->nid." 
              AND question_vid = ".$form['#node']->vid. " 
              c31 beae0c34ff35a2
a96676 9 4445cc317beae0c34ff35a2
a966 6 9
              AND previous_question_vid = ".$obj_questions->child_vid. " 
              AND answer_id = ".$obj_answers->id;
              888d83 2362c3b35e5
29a7f7d1e3fb07888d83f2
              $r_is_required_previous_question = db_query( $q_is_required_previous_question);
              $obj_is_required_previous_question = db_fetch_object( $r_is_required_previous_question);
              75088c5f92ee12a6aa 6 1a864b4556cb75088c5f92ee12a
              $answer_key = $obj_answers->id;
              $obj_title_str = $obj_answers->answer;
              e0c0efda9ee0 1 57d
59c0c4f2a61d4de0c0efda9ee051557d
59c0c4f
            }
            $form["wcds"][$quiz_key][$question_key][$answer_key] = 
              120516e
                '#type' => 'checkbox',
                '#title' => t($obj_title_str),
                7c674 35 ef23479
559ed2b1c
                '#name' => t($answer_name),
                '#default_value' => t($obj_is_required_previous_question->is_required_previous_question),
                8f0f45c81f0fe3c8
b b1 4301a0aadac8f0f4
                '#required' => FALSE,
                /*'#weight' => 1,*/
              a2b
            //$_SESSION["wcds"][$answer_name]=t($obj_answers->is_required_previous_question);
            $_SESSION["wcds"][$answer_name]=-1;
          41
        }
      }
    06
    $form['#validate'][] = 'wcds_quizroute_form_validate';
    /* call submit handler on this node type form */
    49af885b25e4f674 d a7f7f6664
946949af885b25e4f674bdfa7f7f6664
9    9
  }
}
6
/**
 * Implements hook_submit_handler()
 d b
 * Extend product edit form submit for including redirect field
 * 
 3 80c64d 51bf28
 *   Form elements
 * 
 7 3ba77f 6c42f0da221b
 *   Form values
 */
2a925393 e5dc46020ed6f4078780833
2a9253935e5dc4602 ed6f407878083 
2
  //update session answers with what users changed on form
  foreach($form_state["clicked_button"]["#post"] AS $k=>$v) {
    160d74534d50cc18bc76077253ed c    6
      //echo $k."=".$v."<br/>";
      $_SESSION["wcds"][$k]=$v;
    2f
  }  
}
3


5
function wcds_quizroute_preprocess_page(&$variables) {
  // suppress messages only when completing test taking
  e0d
  if(arg(2) == 'take') return;
    $variables["messages"]=null;
    92f
}